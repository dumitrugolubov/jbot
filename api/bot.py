import os
import json
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    Application, CommandHandler, MessageHandler, filters, ContextTypes,
    CallbackQueryHandler, ConversationHandler
)
import httpx # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è OpenRouter)

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
# –ü–æ–ª—É—á–∞–π—Ç–µ —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Vercel.
# –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∏—Ö –≤ Dashboard Vercel –∫–∞–∫ "Secret Environment Variables".
# –ü—Ä–∏–º–µ—Ä: TELEGRAM_TOKEN, ADMIN_CHAT_ID
TOKEN = os.environ.get("TELEGRAM_TOKEN")
# chat_id –¥–ª—è –∞–¥–º–∏–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ.
ADMIN_CHAT_ID = int(os.environ.get("ADMIN_CHAT_ID")) # –£–∫–∞–∂–∏—Ç–µ ID –∞–¥–º–∏–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º
WALLET = "TVadXnyCDphgsSZY4p9zs3pgNZYufRwp71" # –ê–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ USDT

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
ASK_NICK, ASK_DISCORD, ASK_SCREEN = range(3)

# --- –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Application ---
# –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ Application –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
# –ø—Ä–∏ "—Ö–æ–ª–æ–¥–Ω–æ–º" –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ Vercel.
_application_instance = None

def get_application():
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä telegram.ext.Application.
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.
    """
    global _application_instance
    if _application_instance is None:
        if not TOKEN:
            raise ValueError("TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
        _application_instance = Application.builder().token(TOKEN).build()
        setup_handlers(_application_instance) # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Application
    return _application_instance

# --- –§—É–Ω–∫—Ü–∏–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –±–æ—Ç–∞ ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    keyboard = [[InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å", callback_data="pay")]]
    text = (
        "–¢—Ä–µ–π–¥–∏–Ω–≥ ‚Äî –æ–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞.\n"
        "–ù–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø–æ–¥—Ç–∞–ª–∫–∏–≤–∞–µ—Ç –∫ —Ä–∞–∑–≤–∏—Ç–∏—é –∏ –¥–µ–ª–∞–µ—Ç —ç—Ç—É –∏–≥—Ä—É –ø–æ–Ω—è—Ç–Ω–µ–µ.\n\n"
        "*–ß—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫:*\n"
        "https://teletype.in/@jteam/xJTC\n\n"
        "*–¶–µ–Ω–∞:* 200 USDT (3 –º–µ—Å—è—Ü–∞)\n\n"
        "–ê–∫—Ç—É–∞–ª—å–Ω–æ –¥–æ 1 –∏—é–Ω—è."
    )
    await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ InlineKeyboard."""
    query = update.callback_query
    await query.answer() # –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback_query, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ

    if query.data == "pay":
        keyboard = [
            [InlineKeyboardButton("üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å", callback_data="copy_wallet")],
            [InlineKeyboardButton("–û–ø–ª–∞—Ç–∏–ª", callback_data="paid")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")]
        ]
        text = (
            "*–†–µ–∫–≤–∏–∑–∏—Ç—ã:*\n\n"
            "USDT (TRC20)\n\n"
            f"`{WALLET}`\n\n"
            "üëâ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∞–¥—Ä–µ—Å –≤—ã—à–µ –∏–ª–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è."
        )
        await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')

    elif query.data == "copy_wallet":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        await context.bot.send_message(
            chat_id=query.message.chat_id,
            text=f"`{WALLET}`",
            parse_mode='Markdown'
        )
        await query.answer("üí≥ –ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è!", show_alert=True)

    elif query.data == "back":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é —Å –∫–Ω–æ–ø–∫–æ–π "–û–ø–ª–∞—Ç–∏—Ç—å"
        keyboard = [[InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å", callback_data="pay")]]
        text = (
            "–¢—Ä–µ–π–¥–∏–Ω–≥ ‚Äî –æ–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞.\n"
            "–ù–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø–æ–¥—Ç–∞–ª–∫–∏–≤–∞–µ—Ç –∫ —Ä–∞–∑–≤–∏—Ç–∏—é –∏ –¥–µ–ª–∞–µ—Ç —ç—Ç—É –∏–≥—Ä—É –ø–æ–Ω—è—Ç–Ω–µ–µ.\n\n"
            "*–ß—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫:*\n"
            "https://teletype.in/@jteam/xJTC\n\n"
            "*–¶–µ–Ω–∞:* 200 USDT (3 –º–µ—Å—è—Ü–∞)\n\n"
            "–ê–∫—Ç—É–∞–ª—å–Ω–æ –¥–æ 1 –∏—é–Ω—è."
        )
        await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')

    elif query.data == "paid":
        await query.edit_message_text("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram –Ω–∏–∫–Ω–µ–π–º:")
        return ASK_NICK # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é ConversationHandler

async def ask_nick(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞ Telegram."""
    context.user_data["tg_nick"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Discord –Ω–∏–∫–Ω–µ–π–º:")
    return ASK_DISCORD

async def ask_discord(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞ Discord."""
    context.user_data["discord_nick"] = update.message.text
    await update.message.reply_text("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∫—Ä–∏–Ω –æ–ø–ª–∞—Ç—ã:")
    return ASK_SCREEN

async def ask_screen(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –æ–ø–ª–∞—Ç—ã."""
    if update.message.photo:
        photo_file = await update.message.photo[-1].get_file()
        file_id = photo_file.file_id
        tg_nick = context.user_data.get("tg_nick", "–ù–µ —É–∫–∞–∑–∞–Ω")
        discord_nick = context.user_data.get("discord_nick", "–ù–µ —É–∫–∞–∑–∞–Ω")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∞–¥–º–∏–Ω—É
        try:
            await context.bot.send_photo(
                chat_id=ADMIN_CHAT_ID,
                photo=file_id,
                caption=f"üßë –ù–æ–≤—ã–π –ø–ª–∞—Ç—ë–∂\nTG: {tg_nick}\nDiscord: {discord_nick}\n"
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update.effective_user.mention_html()}", # –î–æ–±–∞–≤–ª–µ–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                parse_mode='HTML' # –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è mention_html
            )
        except Exception as e:
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –∞–¥–º–∏–Ω—É ({ADMIN_CHAT_ID}): {e}")
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.")
            return ConversationHandler.END # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥

        final_text = (
            "____\n\n"
            "–ì–æ—Ç–æ–≤–æ!\n\n"
            "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –∑–∞—è–≤–∫—É, –≤—ã —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n"
            "–ü–æ–∫–∞ –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –ª—É—á—à–µ–≥–æ YouTube –±–ª–æ–≥–µ—Ä–∞ –ø–æ —Ç—Ä–µ–π–¥–∏–Ω–≥—É:\n"
            "https://youtube.com/@jteamtube\n\n" # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ —Ä–µ–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
            "____"
        )
        await update.message.reply_text(final_text, reply_markup=ReplyKeyboardRemove())
        return ConversationHandler.END # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥
    else:
        # –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ –Ω–µ —Ñ–æ—Ç–æ, –ø—Ä–æ—Å–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–º–µ–Ω–Ω–æ —Å–∫—Ä–∏–Ω—à–æ—Ç
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º–µ–Ω–Ω–æ —Å–∫—Ä–∏–Ω—à–æ—Ç.")
        return ASK_SCREEN

async def cancel_conversation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ ConversationHandler."""
    await update.message.reply_text(
        '–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω—ë–Ω. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–∞–≤ /start.',
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END

async def unknown_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."""
    await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start.")


# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ---

def setup_handlers(application: Application):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –±–æ—Ç–∞."""
    # ConversationHandler –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–ø–ª–∞—Ç—ã
    conv_handler = ConversationHandler(
        entry_points=[
            CallbackQueryHandler(button_callback, pattern="^paid$") # –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ –∫–Ω–æ–ø–∫–µ "–û–ø–ª–∞—Ç–∏–ª"
        ],
        states={
            ASK_NICK: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_nick)],
            ASK_DISCORD: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_discord)],
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ, –∞ —Ç–∞–∫–∂–µ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ñ–æ—Ç–æ
            ASK_SCREEN: [
                MessageHandler(filters.PHOTO, ask_screen),
                MessageHandler(filters.TEXT | filters.ATTACHMENT | filters.VIDEO | filters.AUDIO | filters.VOICE, ask_screen)
            ]
        },
        fallbacks=[CommandHandler('cancel', cancel_conversation)], # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–º–µ–Ω–∏—Ç—å –¥–∏–∞–ª–æ–≥
        allow_reentry=True, # –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤—Ö–æ–¥–∏—Ç—å –≤ –¥–∏–∞–ª–æ–≥
        per_user=True, # –î–∏–∞–ª–æ–≥ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        per_chat=False # –ï—Å–ª–∏ –±–æ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö, —Ç–æ True, –∏–Ω–∞—á–µ False
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_callback)) # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö Inline-–∫–Ω–æ–ø–æ–∫
    application.add_handler(conv_handler)
    application.add_handler(MessageHandler(filters.COMMAND, unknown_command)) # –û—Ç–ª–æ–≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥

# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è Vercel ---

async def handle_telegram_update(body: dict) -> dict:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç Telegram (webhook).
    –î–µ—Å–µ—Ä–∏–∞–ª–∏–∑—É–µ—Ç —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –æ–±—ä–µ–∫—Ç Update –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –µ–≥–æ –±–æ—Ç—É.
    """
    try:
        application = get_application()
        update = Update.de_json(body, application.bot) # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON –≤ –æ–±—ä–µ–∫—Ç Update
        await application.process_update(update) # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Application
        return {"statusCode": 200, "body": "OK"} # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç Telegram
    except Exception as e:
        print(f"Error processing Telegram update: {e}")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º 500 Internal Server Error, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
        return {"statusCode": 500, "body": json.dumps({"error": str(e)})}

# --- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Vercel (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∞–¥–∞–ø—Ç–µ—Ä) ---
# Vercel –≤—ã–∑—ã–≤–∞–µ—Ç —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç HTTP-–∑–∞–ø—Ä–æ—Å.
# –û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π, –µ—Å–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω ASGI (–∫–æ—Ç–æ—Ä—ã–π –±–æ–ª–µ–µ —Å–ª–æ–∂–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –¥–ª—è PTB).
def handler(request):
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –≤—ã–∑—ã–≤–∞–µ–º–∞—è Vercel.
    –ü–∞—Ä—Å–∏—Ç –≤—Ö–æ–¥—è—â–∏–π HTTP-–∑–∞–ø—Ä–æ—Å –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç
